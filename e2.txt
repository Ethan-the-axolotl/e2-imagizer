@name Pietroglyph's Image Loader
@inputs Screen:wirelink Before:number
@outputs After:number
@persist Segment:number Target:string Id:number ChunkXMax:number ChunkYMax:number ChunkPwr:number Hash:string I:number X:number Y:number
@persist Mode:number
@trigger 

# BSD 3-Clause License

# Copyright (c) 2017, Declan Freeman-Gleason (Pietroglyph)
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.

# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.

# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,

runOnHTTP(1)
runOnChat(1)

Screen:writeCell(1048569,3) # Set the color mode to 3

if (first()) {
    After = -1
    Mode = 3 # Do nothing/donezo mode
    ChunkPwr = 9
    ChunkXMax = 2^ChunkPwr
    ChunkYMax = ChunkXMax
    Screen:writeCell(1048574,1) # Hardware clear the screen
    Screen:writeCell(1048569,3) # Set the color mode to 3
}

if (clk("retry")) {
    if (httpCanRequest()) {
        httpRequest("http://vps.nalcad.tk/serialize/?hash="+Hash+"&chunkpwr="+ChunkPwr+"&segment="+Segment)
    } else {
        timer("retry",1000)
    }
} elseif (clk("ctn")) {
    while(perf()) {
        if (owner():lastSaid() == "!") { # Cancel command
            hideChat(1)
            Mode = 3
            break
        }
        Sub = httpData():sub(I,I+8)
        if (Sub=="nnnnnnnnn") {
            Y++
            X = 0
        } elseif (Sub=="eeeeeeeee") {
            print("Done at "+I+" out of "+ChunkXMax^2)
            Mode = 3 # Finished mode
            After = Segment+1 # Tell the next E2 that we're done
            break
        } else {
            Screen:writeCell(1048575,1) # Set clk to 1
            Screen:writeCell(X+Y*512,Sub:toNumber()) # Draw the colors
            X++
        }
        I += 9
    }
    if (Mode != 3) {
        timer("ctn",1)
    }
} elseif (clk("pre")) {
        if (Before != -1) {
            Segment = Before
            Mode = 0
            httpRequest("http://vps.nalcad.tk/initalize/?target="+Target)
            Screen:writeCell(1048574,1) # Hardware clear the screen
            Screen:writeCell(1048574,0) # Stop hardware clearing the screen
        } else {
            timer("pre",1000) # Wait until the previous E2 is done to stop massive server lag
        }
}

if (httpClk()) {
    if (Mode == 0) {
        ParsedData = httpData():explode(" ")
        if (ParsedData[1,string] == "OK") { # Arrays apparently start at 1 in E2
            print("Sucsessfully retrieved image segment.")
            Mode = 1 # Serialization mode
            if (httpCanRequest()) {
                httpRequest("http://vps.nalcad.tk/serialize/?hash="+ParsedData[2,string]+"&chunkpwr="+ChunkPwr+"&segment="+Segment)
            } else {
                timer("retry",1000)
                Hash = ParsedData[2,string]
            }
        } else {
            print("Error: "+httpData()) # Something went wrong
        }
    } elseif (Mode == 1) {
        print("Parsing image segment.")
        X = 0
        Y = 0
        I = 1
        while(perf()) {
            Sub = httpData():sub(I,I+8)
            if (Sub=="nnnnnnnnn") {
                Y++
                X = 0
            } elseif (Sub=="eeeeeeeee") {
                print("Done at "+I+" out of "+ChunkXMax^2)
                Mode = 3 # Finished mode
                break
            } else {
                Screen:writeCell(1048575,1) # Set clk to 1
                Screen:writeCell(X+Y*512,Sub:toNumber()) # Draw the colors
                X++
            }
            I += 9
        }
        if (Mode != 3) {
            timer("ctn",1)
        }
    }
}

if (chatClk(owner())) {
    Chat = owner():lastSaid():explode(" ")
    if (Chat[1,string] == "~") {
        hideChat(1)
        Target = Chat[2,string]
        if (Before != -1) {
            Segment = Before
            Mode = 0
            httpRequest("http://vps.nalcad.tk/initalize/?target="+Target)
            Screen:writeCell(1048574,1) # Hardware clear the screen
            Screen:writeCell(1048574,0) # Stop hardware clearing the screen
        } else {
            print("Waiting for other E2s...")
            timer("pre",1000) # Wait until the previous E2 is done to stop massive server lag
        }
    } elseif (Chat[1,string] == "!") { # Cancel command
        hideChat(1)
        Mode = 3
    }
} 
